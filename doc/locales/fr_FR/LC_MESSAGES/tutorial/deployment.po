# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Yaal Coop
# This file is distributed under the same license as the canaille package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: canaille 0.0.56\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-22 15:37+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: fr_FR\n"
"Language-Team: fr_FR <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../doc/tutorial/deployment.rst:2 ae73f16a212144ffa313290a207b141f
msgid "Deployment"
msgstr ""

#: ../../doc/tutorial/deployment.rst:5 35937b9f04b4457f937ec96e1ba29caf
msgid "Application service"
msgstr ""

#: ../../doc/tutorial/deployment.rst:7 9e7fd12c32644a11b26be30abdb8fbb9
msgid ""
"After having finished Canaille installation you have to run it in a WSGI "
"application server. Here are some WSGI server configuration examples you "
"can pick. Do not forget to update the paths."
msgstr ""

#: ../../doc/tutorial/deployment.rst:11 113eacd3942647f4a67709d106074aae
msgid "gunicorn"
msgstr ""

#: ../../doc/tutorial/deployment.rst:13 49056a8d4181451b9d442e040ef58134
msgid "Todo"
msgstr ""

#: ../../doc/tutorial/deployment.rst:15 ab8cb26415874d7dac41d27e0fd09196
msgid "Write a gunicorn configuration sample file."
msgstr ""

#: ../../doc/tutorial/deployment.rst:18 275e76607f394394925fd8e72baa1bdd
msgid "uwsgi"
msgstr ""

#: ../../doc/tutorial/deployment.rst:42 7dd0c119f3ca4d34af4b365848855c7e
msgid "Webserver"
msgstr ""

#: ../../doc/tutorial/deployment.rst:44 2642973dba1e4c229c8cafd6b53d1e2e
msgid ""
"Now you have to plug your WSGI application server to your webserver so it"
" is accessible on the internet. Here are some webserver configuration "
"examples you can pick:"
msgstr ""

#: ../../doc/tutorial/deployment.rst:48 6e1d1fb0d1de408da0f959d2dda936fd
msgid "Nginx"
msgstr ""

#: ../../doc/tutorial/deployment.rst:114 271a543d8077413c8450cb62d811cd49
msgid "Apache"
msgstr ""

#: ../../doc/tutorial/deployment.rst:153 468c9bd93bf94365a1e7203d93fa1654
msgid "Recurrent jobs"
msgstr ""

#: ../../doc/tutorial/deployment.rst:155 d3f3c6197cdd4664a013462aaea3d735
msgid ""
"You might want to clean up your database to avoid it growing too much. "
"You can regularly delete expired tokens and authorization codes with:"
msgstr ""

#: ../../doc/tutorial/deployment.rst:164 503958ca36f24b0f96d906166e54b4eb
msgid "Webfinger"
msgstr ""

#: ../../doc/tutorial/deployment.rst:166 4c4d784e493a44e082095fa18c278023
msgid ""
"You may want to configure a `WebFinger`_ endpoint on your main website to"
" allow the automatic discovery of your Canaille installation based on the"
" account name of one of your users. For instance, suppose your domain is "
"``mydomain.example`` and your Canaille domain is "
"``auth.mydomain.example`` and there is a user ``john.doe``. A third-party"
" application could require to authenticate the user and ask them for a "
"user account. The user would give their account "
"``john.doe@mydomain.example``, then the application would perform a "
"WebFinger request at ``https://mydomain.example/.well-known/webfinger`` "
"and the response would contain the address of the authentication server "
"``https://auth.mydomain.example``. With this information the third party "
"application can redirect the user to the Canaille authentication page."
msgstr ""

#: ../../doc/tutorial/deployment.rst:168 8b5733a39b024333812a79f6415a2d7f
msgid ""
"The difficulty here is that the WebFinger endpoint must be hosted at the "
"top-level domain (i.e. ``mydomain.example``) while the authentication "
"server might be hosted on a sublevel (i.e. ``auth.mydomain.example``). "
"Canaille provides a WebFinger endpoint, but if it is not hosted at the "
"top-level domain, a web redirection is required on the ``/.well-"
"known/webfinger`` path."
msgstr ""

#: ../../doc/tutorial/deployment.rst:170 004318975e4d42f9b9df8a4bd60b702e
msgid "Here are configuration examples for Nginx or Apache:"
msgstr ""

#: ../../doc/tutorial/deployment.rst:172 7654879ea9db4641898c7d3d54743625
msgid "Nginx webfinger configuration for a top level domain"
msgstr ""

#: ../../doc/tutorial/deployment.rst:181 c853d3e4d63943a587bd51261c17fea9
msgid "Apache webfinger configuration for a top level domain"
msgstr ""

#: ../../doc/tutorial/deployment.rst:191 e4ab313e4d6744fda9814e13e6921bed
msgid "Create the first user"
msgstr ""

#: ../../doc/tutorial/deployment.rst:193 4586783257664fe8b2d4ca1a1b56585f
msgid ""
"Once canaille is installed, soon enough you will need to add users. To "
"create your first user you can use the :ref:`canaille create "
"<cli_create>` CLI."
msgstr ""

