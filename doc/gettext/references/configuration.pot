# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Yaal Coop
# This file is distributed under the same license as the canaille package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: canaille 0.0.56\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-22 17:26+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../references/configuration.rst:2
#: f352927b3e674164b4ee528d290e1ba3
msgid "Configuration"
msgstr ""

#: ../references/configuration.rst:5
#: 449fdd3866354144a1df0b0541208b76
msgid "Load the configuration"
msgstr ""

#: ../references/configuration.rst:7
#: 1e797371bae94f50b7037acaf549b6fa
msgid "Canaille can be configured either by a environment variables, environment file, or by a configuration file."
msgstr ""

#: ../references/configuration.rst:10
#: 0377b9dd81fd41c79cdf3f8a8245de59
msgid "Configuration file"
msgstr ""

#: ../references/configuration.rst:12
#: 9023a7e764a54abda473435fb2c67556
msgid "The configuration can be written in `toml` configuration file which path is passed in the :envvar:`CONFIG` environment variable."
msgstr ""

#: ../../canaille/app/configuration.py:docstring of canaille.app.configuration.RootSettings:11
#: ../references/configuration.rst:14
#: ../references/configuration.rst:85
#: 275d6238f6de4292bc8fa82eace110b7
#: 954a70d4151143f4af9f3e509533dd69
#: ff44591b60384f37b0094fbe5883142d
msgid "config.toml"
msgstr ""

#: ../references/configuration.rst:26
#: 7ffbc024b9f44c4092065cff332026b3
msgid "You can have a look at the :ref:`example file <references/configuration:Example file>` for inspiration."
msgstr ""

#: ../references/configuration.rst:29
#: be2150038b8a47e0971dd82518455d15
msgid "Environment variables"
msgstr ""

#: ../references/configuration.rst:31
#: 7b656666c8b64597b79511e46faa57a1
msgid "In addition, parameters that have not been set in the configuration file can be read from environment variables. The way environment variables are parsed can be read from the `pydantic-settings documentation <https://docs.pydantic.dev/latest/concepts/pydantic_settings/#parsing-environment-variable-values>`_."
msgstr ""

#: ../references/configuration.rst:36
#: 0379beff48534aa59770a545033aedf7
msgid "For environment vars, the separator between sections and variables is a double underscore: ``__``. For instance, the ``NAME`` var in the ``CANAILLE`` section shown above is ``CANAILLE__NAME``."
msgstr ""

#: ../references/configuration.rst:40
#: 2505d4af33c547ef93f09be4282e8aec
msgid "Environment file"
msgstr ""

#: ../references/configuration.rst:42
#: a8a58f82f61b4fc0b28434e743ed6de6
msgid "Any environment variable can also be written in a ``.env``, and will be read if present."
msgstr ""

#: ../references/configuration.rst:44
#: de874bfbe8b74294a9418700556580ec
msgid ".env"
msgstr ""

#: ../references/configuration.rst:62
#: 66e3119e3a3649b6829112cc1d41e11b
msgid "Parameters"
msgstr ""

#: ../../canaille/app/configuration.py:docstring of canaille.app.configuration.RootSettings:1
#: 5b109da5244d4dfbabb218e4c6bc5d47
msgid "The top-level namespace contains holds the configuration settings unrelated to Canaille."
msgstr ""

#: ../../canaille/app/configuration.py:docstring of canaille.app.configuration.RootSettings:4
#: 0cf177f44bba4097827a16b1a2f1d6c0
msgid "The configuration paramateres from the following libraries can be used:"
msgstr ""

#: ../../canaille/app/configuration.py:docstring of canaille.app.configuration.RootSettings:6
#: d6bc590bfed047e8b86af354be80fe03
msgid ":doc:`Flask <flask:config>`"
msgstr ""

#: ../../canaille/app/configuration.py:docstring of canaille.app.configuration.RootSettings:7
#: 855b6f96105a43b094b402a616bbae30
msgid ":doc:`Flask-WTF <flask-wtf:config>`"
msgstr ""

#: ../../canaille/app/configuration.py:docstring of canaille.app.configuration.RootSettings:8
#: 3c35731764054bff9285d6bfb79a7785
msgid ":doc:`Flask-Babel <flask-babel:index>`"
msgstr ""

#: ../../canaille/app/configuration.py:docstring of canaille.app.configuration.RootSettings:9
#: ac4465974e9f44c7b879303fdb40fc4f
msgid ":doc:`Authlib <authlib:flask/2/authorization-server>`"
msgstr ""

#: ../../docstring of canaille.app.configuration.RootSettings.DEBUG:1
#: a2761715a159492ca4c5180c65189c58
msgid "The Flask :external:py:data:`DEBUG` configuration setting."
msgstr ""

#: ../../docstring of canaille.app.configuration.RootSettings.DEBUG:3
#: 5b40ae56684347e0a6f369b4f2896691
msgid "This enables debug options."
msgstr ""

#: ../../docstring of canaille.app.configuration.RootSettings.DEBUG:7
#: ab54e5fb83cc40c6a1867ec701bb051b
msgid "This is useful for development but should be absolutely avoided in production environments."
msgstr ""

#: ../../docstring of canaille.app.configuration.RootSettings.PREFERRED_URL_SCHEME:1
#: c66f04b99f7649b49ad45b30d2e25aa9
msgid "The Flask :external:py:data:`PREFERRED_URL_SCHEME` configuration setting."
msgstr ""

#: ../../docstring of canaille.app.configuration.RootSettings.PREFERRED_URL_SCHEME:4
#: d13d3b6ef4c0498bbfbe74ede138249f
msgid "This sets the url scheme by which canaille will be served."
msgstr ""

#: ../../docstring of canaille.app.configuration.RootSettings.SECRET_KEY:1
#: d5dcfdec96404860acab981f826562ba
msgid "The Flask :external:py:data:`SECRET_KEY` configuration setting."
msgstr ""

#: ../../docstring of canaille.app.configuration.RootSettings.SECRET_KEY:3
#: 7e8c4487ab1446039177843b912da108
msgid "You MUST change this."
msgstr ""

#: ../../docstring of canaille.app.configuration.RootSettings.SERVER_NAME:1
#: 7d62d0ae8c664a048ef164ff8efef75e
msgid "The Flask :external:py:data:`SERVER_NAME` configuration setting."
msgstr ""

#: ../../docstring of canaille.app.configuration.RootSettings.SERVER_NAME:3
#: 965334877d854795a264b6ceedcac212
msgid "This sets domain name on which canaille will be served."
msgstr ""

#: ../../canaille/core/configuration.py:docstring of canaille.core.configuration.CoreSettings:1
#: 0a4a605e6a1940fab498c34200639e5c
msgid "The settings from the ``CANAILLE`` namespace."
msgstr ""

#: ../../canaille/core/configuration.py:docstring of canaille.core.configuration.CoreSettings:3
#: 5a95511f181a4890bb8b9083a862ccd3
msgid "Those are all the configuration parameters that controls the behavior of Canaille."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.ACL:1
#: 5d0ddaed2d734874b3e0a61dfda14559
msgid "Mapping of permission groups. See :class:`ACLSettings` for more details."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.ACL:3
#: 539d67c478024eda83b002c329156ba3
msgid "The ACL name can be freely chosen. For example::"
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.ADMIN_EMAIL:1
#: 8703a060664b4b93b202ae8a55c9ab90
msgid "Administration email contact."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.ADMIN_EMAIL:3
#: 8956b1369e7546a39b76b74940e3fcce
msgid "In certain special cases (example : questioning about password corruption), it is necessary to provide an administration contact email."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.EMAIL_CONFIRMATION:1
#: 8670b9d62d284afd847234da2ee795ae
msgid "If :py:data:`True`, users will need to click on a confirmation link sent by email when they want to add a new email."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.EMAIL_CONFIRMATION:4
#: 0eda2a2a767649dc980c8e065d9169a6
msgid "By default, this is true if ``SMTP`` is configured, else this is false. If explicitly set to true and ``SMTP`` is disabled, the email field will be read-only."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.ENABLE_PASSWORD_COMPROMISSION_CHECK:1
#: f4b1659c97c9420c9e67025ec44f290d
msgid "If :py:data:`True`, Canaille will check if passwords appears in compromission databases such as `HIBP <https://haveibeenpwned.com>`_ when users choose a new one."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.ENABLE_PASSWORD_RECOVERY:1
#: b2576eba8d9d41bfadecc6d10f66cb83
msgid "If :py:data:`False`, then users cannot ask for a password recovery link by email."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.ENABLE_REGISTRATION:1
#: 57f195e48f3d4105b171b26b22801fe0
msgid "If :py:data:`True`, then users can freely create an account at this instance."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.ENABLE_REGISTRATION:4
#: 1fe396b30d184f76ab35cf310d689ba8
msgid "If email verification is available, users must confirm their email before the account is created."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.FAVICON:1
#: 8c747e3998e148b397f3b3afaedfc251
msgid "You favicon."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.FAVICON:3
#: c71c1dc15e314542924691141e9ceba0
msgid "If unset and :attr:`LOGO` is set, then the logo will be used."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.HIDE_INVALID_LOGINS:1
#: 91fdf12a588442899a9e93f1a13edbb2
msgid "If :py:data:`True`, when users try to sign in with an invalid login, a message is shown indicating that the password is wrong, but does not give a clue whether the login exists or not."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.HIDE_INVALID_LOGINS:5
#: 7f6526364ecf44d0a6ea4f83b986cd99
msgid "If :py:data:`False`, when a user tries to sign in with an invalid login, a message is shown indicating that the login does not exist."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.HTMX:1
#: 64629144df814d019eed25c5b1130301
msgid "Accelerates webpages loading with asynchronous requests."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.INVITATION_EXPIRATION:1
#: 239e3d72e0aa42c996215debaa36a92f
msgid "The validity duration of registration invitations, in seconds."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.INVITATION_EXPIRATION:3
#: 41669e4af29b45ed9dab09dabe5858aa
msgid "Defaults to 2 days."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.JAVASCRIPT:1
#: 4c4ae3815e5542dc995f90e1f33a79f3
msgid "Enables Javascript to smooth the user experience."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.LANGUAGE:1
#: 176ff367a4bc455c89f33b252c723ac9
msgid "If a language code is set, it will be used for every user."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.LANGUAGE:3
#: 63976f2340fd417f94c5efc2f31768db
msgid "If unset, the language is guessed according to the users browser."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.LOGGING:1
#: cbef5d40655e4b309a1dbce7f4b59cc6
msgid "Configures the logging output using the python logging configuration format:"
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.LOGGING:3
#: e7b83b790b52476891f49f70cc2c3d03
msgid "if :py:data:`None`, everything is logged in the standard error output the log level is :py:data:`~logging.DEBUG` if the :attr:`~canaille.app.configuration.RootSettings.DEBUG` setting is :py:data:`True`, else this is :py:data:`~logging.INFO`"
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.LOGGING:6
#: 52803036df304a2d91104ff033694988
msgid "if this is a :class:`dict`, it is passed to :func:`logging.config.dictConfig`:"
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.LOGGING:7
#: 3ba83792d3ec409694c435cbe06ddab2
msgid "if this is a :class:`str`, it is expected to be a file path that will be passed to :func:`logging.config.fileConfig`"
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.LOGGING:10
#: 289ee5ab24bd4ef68b17b81cbaa7c233
msgid "For example::"
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.LOGO:1
#: c7e469fe99bb4b71b0328349e72f0a61
msgid "The logo of your organization, this is useful to make your organization recognizable on login screens."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.MAX_PASSWORD_LENGTH:1
#: 91a871ab33f4451a9caf95ed0da63833
msgid "Maximum length for user password."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.MAX_PASSWORD_LENGTH:3
#: 1c25d71de99d4d46aa496c9df6a08c33
msgid "There is a technical limit with passlib used by sql database of 4096 characters. If the value entered is 0 or None, or greater than 4096, then 4096 will be retained."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.MIN_PASSWORD_LENGTH:1
#: c8c3307fa58e4c45afb5ac1e24626972
msgid "Minimum length for user password."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.MIN_PASSWORD_LENGTH:3
#: 4d73f4bca2984046b3efb3ba322cdf34
msgid "It is possible not to set a minimum, by entering None or 0."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.NAME:1
#: 8452d4d220b24f408a3418bbf451c672
msgid "Your organization name."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.NAME:3
#: 458bb630ef124d75ba2bbce3b58c4782
msgid "Used for display purpose."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.PASSWORD_COMPROMISSION_CHECK_API_URL:1
#: 7e49f44fa7ad43f6924d762afcb43cf6
msgid "Have i been pwned api url for compromission checks."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.SENTRY_DSN:1
#: 6daac624f580441ea0f641df0e7d18ad
msgid "A `Sentry <https://sentry.io>`_ DSN to collect the exceptions."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.SENTRY_DSN:3
#: f7d352de8d494044a75175ce2c34be3e
msgid "This is useful for tracking errors in test and production environments."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.SMTP:1
#: 4918c3baa9ff4a7ea370ae99df22f450
msgid "The settings related to SMTP and mail configuration."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.SMTP:3
#: 35153331cf064d90b4d8051c4363a935
msgid "If unset, mail-related features like password recovery won't be enabled."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.THEME:1
#: 5df367ed5d3f4a53b537e6c50b677c3b
msgid "The name of a theme in the 'theme' directory, or a path to a theme."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.THEME:3
#: 34d6f2a3091c4a7cb5099e15bb92ca5f
msgid "Defaults to ``default``. Theming is done with `flask-themer <https://github.com/tktech/flask-themer>`_."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.TIMEZONE:1
#: 7be8c0ebcee24c42bad6e4a1abecbaad
msgid "The timezone in which datetimes will be displayed to the users (e.g. ``CEST``)."
msgstr ""

#: ../../docstring of canaille.core.configuration.CoreSettings.TIMEZONE:4
#: 9f062ba2827b4837971d4c34ff74a252
msgid "If unset, the server timezone will be used."
msgstr ""

#: ../../canaille/core/configuration.py:docstring of canaille.core.configuration.SMTPSettings:1
#: da9f430a60ed4b5e871bae9218bc2b1b
msgid "The SMTP configuration. Belong in the ``CANAILLE.SMTP`` namespace. If unset, mail related features will be disabled, such as mail verification or password recovery emails."
msgstr ""

#: ../../canaille/core/configuration.py:docstring of canaille.core.configuration.SMTPSettings:5
#: e0bad81478534132be5d8de19ba8c05e
msgid "By default, Canaille will try to send mails from localhost without authentication."
msgstr ""

#: ../../docstring of canaille.core.configuration.SMTPSettings.FROM_ADDR:1
#: 6d0e7e6a931c4f568695d714da824c78
msgid "The sender for Canaille mails."
msgstr ""

#: ../../docstring of canaille.core.configuration.SMTPSettings.FROM_ADDR:3
#: 083e072e2ef24f02955bf40dca897f7d
msgid "Some mail provider might require a valid sender address."
msgstr ""

#: ../../docstring of canaille.core.configuration.SMTPSettings.HOST:1
#: bf8d6260946747cd8d9db422a2977980
msgid "The SMTP host."
msgstr ""

#: ../../docstring of canaille.core.configuration.SMTPSettings.LOGIN:1
#: 432b9e9f148c4b79a07af984139b8b90
msgid "The SMTP login."
msgstr ""

#: ../../docstring of canaille.core.configuration.SMTPSettings.PASSWORD:1
#: 42fab7de34b9418bb1422c74e5f9af1f
msgid "The SMTP password."
msgstr ""

#: ../../docstring of canaille.core.configuration.SMTPSettings.PORT:1
#: 42d65ebe36c2450f9532a587ea0a8de2
msgid "The SMTP port."
msgstr ""

#: ../../docstring of canaille.core.configuration.SMTPSettings.SSL:1
#: 208db0a1482b42b29a2f582ff3c308d4
msgid "Whether to use SSL to connect to the SMTP server."
msgstr ""

#: ../../docstring of canaille.core.configuration.SMTPSettings.TLS:1
#: aebe44192def402f9c370ac7dd2386f1
msgid "Whether to use TLS to connect to the SMTP server."
msgstr ""

#: ../../canaille/core/configuration.py:docstring of canaille.core.configuration.ACLSettings:1
#: 04870aa4e9c046219085be74456ef180
msgid "Access Control List settings. Belong in the ``CANAILLE.ACL`` namespace."
msgstr ""

#: ../../canaille/core/configuration.py:docstring of canaille.core.configuration.ACLSettings:3
#: beaf3f3f98b14cf9862ee2505dfa97db
msgid "You can define access controls that define what users can do on canaille An access control consists in a :attr:`FILTER` to match users, a list of :attr:`PERMISSIONS` matched users will be able to perform, and fields users will be able to :attr:`READ` and :attr:`WRITE`. Users matching several filters will cumulate permissions."
msgstr ""

#: ../../docstring of canaille.core.configuration.ACLSettings.FILTER:1
#: ebf8c5195c7d413aa4328754379e55df
msgid ":attr:`FILTER` can be:"
msgstr ""

#: ../../docstring of canaille.core.configuration.ACLSettings.FILTER:3
#: d566cef633ee456c9fad89396dea8224
msgid ":py:data:`None`, in which case all the users will match this access control"
msgstr ""

#: ../../docstring of canaille.core.configuration.ACLSettings.FILTER:4
#: a9b6fbe00f7a45b6af6430d5277888a1
msgid "a mapping where keys are user attributes name and the values those user attribute values. All the values must be matched for the user to be part of the access control."
msgstr ""

#: ../../docstring of canaille.core.configuration.ACLSettings.FILTER:7
#: eb050efec86e47a7b93376503248375a
msgid "a list of those mappings. If a user values match at least one mapping, then the user will be part of the access control"
msgstr ""

#: ../../docstring of canaille.core.configuration.ACLSettings.FILTER:10
#: 5c41147889134281bfd429b0c09aaa92
msgid "Here are some examples::"
msgstr ""

#: ../../docstring of canaille.core.configuration.ACLSettings.PERMISSIONS:1
#: e847d17ac0da4f4bb5752a6edf12611d
msgid "A list of :class:`Permission` users in the access control will be able to manage. For example::"
msgstr ""

#: ../../docstring of canaille.core.configuration.ACLSettings.READ:1
#: 1f9de4fcf01040369e7a21aadfa1118e
msgid "A list of :class:`~canaille.core.models.User` attributes that users in the ACL will be able to read."
msgstr ""

#: ../../docstring of canaille.core.configuration.ACLSettings.WRITE:1
#: ab6304cad7d147b0b839335c84652984
msgid "A list of :class:`~canaille.core.models.User` attributes that users in the ACL will be able to edit."
msgstr ""

#: ../../canaille/core/configuration.py:docstring of canaille.core.configuration.Permission:1
#: fcf4d41879b3400ba4c61ca8eeaec499
msgid "The permissions that can be assigned to users."
msgstr ""

#: ../../canaille/core/configuration.py:docstring of canaille.core.configuration.Permission:3
#: 3a9f55ac1eca45e5bbb75a3c3bd3e84c
msgid "The permissions are intended to be used in :attr:`ACLSettings <canaille.core.configuration.ACLSettings.PERMISSIONS>`."
msgstr ""

#: ../../docstring of canaille.core.configuration.Permission.DELETE_ACCOUNT:1
#: d5ef98541f8b4e1588bda2eeeaacbc5d
msgid "Allows users to delete their account."
msgstr ""

#: ../../docstring of canaille.core.configuration.Permission.DELETE_ACCOUNT:3
#: de8f02efc06246d1bc91e9d34c78e259
msgid "If used with :attr:`~canaille.core.configuration.Permission.MANAGE_USERS`, users can delete any account."
msgstr ""

#: ../../docstring of canaille.core.configuration.Permission.EDIT_SELF:1
#: a2816996936a4eb292c7d9a510f41355
msgid "Allows users to edit their own profile."
msgstr ""

#: ../../docstring of canaille.core.configuration.Permission.IMPERSONATE_USERS:1
#: de9bf735cb24406fba3aad34f3f87c7b
msgid "Allows users to take the identity of another user."
msgstr ""

#: ../../docstring of canaille.core.configuration.Permission.MANAGE_GROUPS:1
#: ee8abccc752e4019a4bf8be9c1da1198
msgid "Allows group edition and creation."
msgstr ""

#: ../../docstring of canaille.core.configuration.Permission.MANAGE_OIDC:1
#: 5e3b60a516ab41278a1a3818393050ee
msgid "Allows OpenID Connect client managements."
msgstr ""

#: ../../docstring of canaille.core.configuration.Permission.MANAGE_USERS:1
#: b71ed1ac778a4c0eb6a0e92043fac7d4
msgid "Allows other users management."
msgstr ""

#: ../../docstring of canaille.core.configuration.Permission.USE_OIDC:1
#: 2b580919de714c50beeea005d433c658
msgid "Allows OpenID Connect authentication."
msgstr ""

#: ../../canaille/oidc/configuration.py:docstring of canaille.oidc.configuration.OIDCSettings:1
#: 211693e2da0f432bb430898384f8a38f
msgid "OpenID Connect settings."
msgstr ""

#: ../../canaille/oidc/configuration.py:docstring of canaille.oidc.configuration.OIDCSettings:3
#: 399b3ba31a2a4ab593437d5ff09b3704
msgid "Belong in the ``CANAILLE_OIDC`` namespace."
msgstr ""

#: ../../docstring of canaille.oidc.configuration.OIDCSettings.DYNAMIC_CLIENT_REGISTRATION_OPEN:1
#: 078d27ab0c25471ba020cd50959953e3
msgid "Whether a token is needed for the RFC7591 dynamical client registration."
msgstr ""

#: ../../docstring of canaille.oidc.configuration.OIDCSettings.DYNAMIC_CLIENT_REGISTRATION_OPEN:3
#: 982ecc53005e44c3af1329467f67b67c
msgid "If :py:data:`True`, no token is needed to register a client. If :py:data:`False`, dynamical client registration needs a token defined in :attr:`DYNAMIC_CLIENT_REGISTRATION_TOKENS`."
msgstr ""

#: ../../docstring of canaille.oidc.configuration.OIDCSettings.DYNAMIC_CLIENT_REGISTRATION_TOKENS:1
#: 8bb7098d11e5459fb0fb10fcfd92cb0e
msgid "A list of tokens that can be used for dynamic client registration."
msgstr ""

#: ../../docstring of canaille.oidc.configuration.OIDCSettings.JWT:1
#: cebac57da84f472b9724ea2b19a88b8b
msgid "JSON Web Token settings."
msgstr ""

#: ../../docstring of canaille.oidc.configuration.OIDCSettings.REQUIRE_NONCE:1
#: 36dd306abec64312ba0c875fc801e5e0
msgid "Force the nonce exchange during the authentication flows."
msgstr ""

#: ../../docstring of canaille.oidc.configuration.OIDCSettings.REQUIRE_NONCE:3
#: 6221bc8bd6ba40b8868633965a26f252
msgid "This adds security but may not be supported by all clients."
msgstr ""

#: ../../canaille/oidc/configuration.py:docstring of canaille.oidc.configuration.JWTSettings:1
#: 1766de0ffc354f91a26f1694fc6071f0
msgid "JSON Web Token settings. Belong in the ``CANAILLE_OIDC.JWT`` namespace."
msgstr ""

#: ../../canaille/oidc/configuration.py:docstring of canaille.oidc.configuration.JWTSettings:3
#: 009bf269cd6b4ae09467ace27f3fb76d
msgid "You can generate a RSA keypair with::"
msgstr ""

#: ../../docstring of canaille.oidc.configuration.JWTSettings.ALG:1
#: a08072b1d25443b1b844772f4ff7c190
msgid "The key algorithm."
msgstr ""

#: ../../docstring of canaille.oidc.configuration.JWTSettings.EXP:1
#: b954e7767c754e6baeab30f362326666
msgid "The time the JWT will be valid, in seconds."
msgstr ""

#: ../../docstring of canaille.oidc.configuration.JWTSettings.ISS:1
#: c9e63d5813b04b92bd8a4a0b585b33a5
msgid "The URI of the identity provider."
msgstr ""

#: ../../docstring of canaille.oidc.configuration.JWTSettings.KTY:1
#: 63966bfbb60749b884bceb1bc350a50f
msgid "The key type."
msgstr ""

#: ../../docstring of canaille.oidc.configuration.JWTSettings.PRIVATE_KEY:1
#: 083732255e954482a089c695f47ef978
msgid "The private key."
msgstr ""

#: ../../docstring of canaille.oidc.configuration.JWTSettings.PRIVATE_KEY:3
#: ../../docstring of canaille.oidc.configuration.JWTSettings.PUBLIC_KEY:3
#: 8cadbc77074442fdb0cc24103fb67271
#: c0c5f1e3e26f412f83daf672905d3fdb
msgid "If :py:data:`None` and debug mode is enabled, then an in-memory key will be used."
msgstr ""

#: ../../docstring of canaille.oidc.configuration.JWTSettings.PUBLIC_KEY:1
#: 9fcee133520d489783c254d774af74a9
msgid "The public key."
msgstr ""

#: ../../canaille/oidc/configuration.py:docstring of canaille.oidc.configuration.JWTMappingSettings:1
#: b300de02031f4663bd151e4cdcbc617a
msgid "Mapping between the user model and the JWT fields."
msgstr ""

#: ../../canaille/oidc/configuration.py:docstring of canaille.oidc.configuration.JWTMappingSettings:3
#: 8dd4c6823ac84e149a02efe65e217b33
msgid "Fields are evaluated with jinja. A ``user`` var is available."
msgstr ""

#: ../../canaille/backends/sql/configuration.py:docstring of canaille.backends.sql.configuration.SQLSettings:1
#: 970f05f5fcb04f4f87ef2aa2b7c436bf
msgid "Settings related to the SQL backend."
msgstr ""

#: ../../canaille/backends/sql/configuration.py:docstring of canaille.backends.sql.configuration.SQLSettings:3
#: d36c2f4f3c424297b123c782251ea5b1
msgid "Belong in the ``CANAILLE_SQL`` namespace."
msgstr ""

#: ../../docstring of canaille.backends.sql.configuration.SQLSettings.DATABASE_URI:1
#: f7ef728d7d5c479485f07a29067bc859
msgid "The SQL server URI. For example::"
msgstr ""

#: ../../canaille/backends/ldap/configuration.py:docstring of canaille.backends.ldap.configuration.LDAPSettings:1
#: 76b7ccaf6b2c4331b5bbd89dab99e2ef
msgid "Settings related to the LDAP backend."
msgstr ""

#: ../../canaille/backends/ldap/configuration.py:docstring of canaille.backends.ldap.configuration.LDAPSettings:3
#: b7c638b46d6f48e2a582cd52a429e21b
msgid "Belong in the ``CANAILLE_LDAP`` namespace."
msgstr ""

#: ../../docstring of canaille.backends.ldap.configuration.LDAPSettings.BIND_DN:1
#: f58def90f0ff4c6a9f0808da3b22f1f8
msgid "The LDAP bind DN."
msgstr ""

#: ../../docstring of canaille.backends.ldap.configuration.LDAPSettings.BIND_PW:1
#: bce683900aa34e788f1048c23cac2ebc
msgid "The LDAP bind password."
msgstr ""

#: ../../docstring of canaille.backends.ldap.configuration.LDAPSettings.GROUP_BASE:1
#: 6a505bac6a524976bb673d0a5fd63f7c
msgid "The LDAP node under which groups will be looked for and saved."
msgstr ""

#: ../../docstring of canaille.backends.ldap.configuration.LDAPSettings.GROUP_BASE:3
#: 42031d1720714c0fb5b570d03c559465
msgid "For instance `\"ou=groups,dc=mydomain,dc=tld\"`."
msgstr ""

#: ../../docstring of canaille.backends.ldap.configuration.LDAPSettings.GROUP_CLASS:1
#: 2c26c317c3c641f2bd78deff9be4a3cc
msgid "The object class to use for creating new groups."
msgstr ""

#: ../../docstring of canaille.backends.ldap.configuration.LDAPSettings.GROUP_NAME_ATTRIBUTE:1
#: db3ddf6effa14ec38baebd99dc50e5b2
msgid "The attribute to use to identify a group."
msgstr ""

#: ../../docstring of canaille.backends.ldap.configuration.LDAPSettings.GROUP_RDN:1
#: dbb54871450e4c7e96d40454f3e29880
msgid "The attribute to identify an object in the Group DN."
msgstr ""

#: ../../docstring of canaille.backends.ldap.configuration.LDAPSettings.ROOT_DN:1
#: c410c0b67b0043048e2063397ea4a07c
msgid "The LDAP root DN."
msgstr ""

#: ../../docstring of canaille.backends.ldap.configuration.LDAPSettings.TIMEOUT:1
#: dc829580b65647098bde180a8681398f
msgid "The LDAP connection timeout."
msgstr ""

#: ../../docstring of canaille.backends.ldap.configuration.LDAPSettings.URI:1
#: bf2bc54274ec49ab9532e43f9db7dfea
msgid "The LDAP server URI."
msgstr ""

#: ../../docstring of canaille.backends.ldap.configuration.LDAPSettings.USER_BASE:1
#: 8417a756a71f4d57b9179bce44c738fd
msgid "The LDAP node under which users will be looked for and saved."
msgstr ""

#: ../../docstring of canaille.backends.ldap.configuration.LDAPSettings.USER_BASE:3
#: d8c7de846fd54c1683622862a57ee7cd
msgid "For instance `ou=users,dc=mydomain,dc=tld`."
msgstr ""

#: ../../docstring of canaille.backends.ldap.configuration.LDAPSettings.USER_CLASS:1
#: 016c6da2807146d8b336efc419545973
msgid "The object class to use for creating new users."
msgstr ""

#: ../../docstring of canaille.backends.ldap.configuration.LDAPSettings.USER_FILTER:1
#: 14d6048df0344b1497539f9179bd28dc
msgid "Filter to match users on sign in."
msgstr ""

#: ../../docstring of canaille.backends.ldap.configuration.LDAPSettings.USER_FILTER:3
#: 15d58563699e4d05b4394f603a2aa7d2
msgid "For instance ``(|(uid={{ login }})(mail={{ login }}))``. Jinja syntax is supported and a ``login`` variable is available, containing the value passed in the login field."
msgstr ""

#: ../../docstring of canaille.backends.ldap.configuration.LDAPSettings.USER_RDN:1
#: 7dc67476e9a241959631d0cb75a01d94
msgid "The attribute to identify an object in the User DN."
msgstr ""

#: ../references/configuration.rst:81
#: 9ad50ee44eed4db98c81f6750d174085
msgid "Example file"
msgstr ""

#: ../references/configuration.rst:83
#: 97c604b45a2041c991b43cab19fd784d
msgid "Here is a configuration file example:"
msgstr ""
