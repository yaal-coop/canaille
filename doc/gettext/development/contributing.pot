# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Yaal Coop
# This file is distributed under the same license as the canaille package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: canaille 0.0.56\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-22 17:26+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../CONTRIBUTING.rst:2
#: db9f3c148acb45cda676a534529e8589
msgid "Contributions"
msgstr ""

#: ../../CONTRIBUTING.rst:4
#: ea0fa8d3ac0d4799a10afd6f37e05d41
msgid "Contributions are welcome!"
msgstr ""

#: ../../CONTRIBUTING.rst:6
#: ba17c0c13c114915adc43e5639bf088c
msgid "The repository is hosted at `gitlab.com/yaal/canaille <https://gitlab.com/yaal/canaille>`_."
msgstr ""

#: ../../CONTRIBUTING.rst:9
#: 701cbef5f1f547729633a993e3622c09
msgid "Discuss"
msgstr ""

#: ../../CONTRIBUTING.rst:11
#: 3d3467217204457eae495ce9c7597a30
msgid "If you want to implement a feature or a bugfix, please start by discussing it with us on the `bugtracker <https://gitlab.com/yaal/canaille/-/issues>`_ or the `matrix room <https://matrix.to/#/#canaille-discuss:yaal.coop>`_."
msgstr ""

#: ../../CONTRIBUTING.rst:16
#: c88320c4d0d34620b655788e1c9fa658
msgid "Development environment"
msgstr ""

#: ../../CONTRIBUTING.rst:18
#: d9611e56c0f04f4099d6abb8bc2be28d
msgid "You can either run the demo locally or with Docker."
msgstr ""

#: ../../CONTRIBUTING.rst:20
#: 16ed6d496d4a451382ea864560d8fe9d
msgid "The only tool required for local development is `uv`. Make sure to have uv `installed on your computer <https://docs.astral.sh/uv/getting-started/installation/>`_ to be able to hack Canaille."
msgstr ""

#: ../../CONTRIBUTING.rst:24
#: 5ec56d5524574bca8128f6dac3176d0e
msgid "Initialize your development environment with: - ``uv sync --extra front --extra oidc`` to have a minimal working development environment. This will allow you to run the tests with ``uv pytest --backend memory``. - ``uv sync --extra front --extra oidc --extra sqlite`` to have a minimal working development environment with SQLite backend support. This will allow you to run the tests with ``uv pytest --backend sql``. - ``uv sync --extra front --extra oidc --extra ldap`` to have a minimal working development environment with LDAP backend support. This will allow you to run the tests with ``uv pytest --backend ldap``. - ``uv sync --all-extras`` if you want to have everything at your fingertips. Note that it may compile some Python dependencies that would expect things to be installed on your system; Some dependencies of Canaille might need to be compiled, so you probably want to check that `GCC` and `cargo` are available on your computer."
msgstr ""

#: ../../CONTRIBUTING.rst:31
#: 4d99057f1b0b42048a0a0ea8d094182a
msgid "After having launched the demo you have access to several services:"
msgstr ""

#: ../../CONTRIBUTING.rst:33
#: 7c17294c7b994de58363e4e72838185c
msgid "A canaille server at `localhost:5000 <http://localhost:5000>`_"
msgstr ""

#: ../../CONTRIBUTING.rst:34
#: e91a134548c54960b39cdf0e58390b1d
msgid "A dummy client at `localhost:5001 <http://localhost:5001>`_"
msgstr ""

#: ../../CONTRIBUTING.rst:35
#: 83c30705c35e4f62b2a2a284b08c8c2b
msgid "Another dummy client at `localhost:5002 <http://localhost:5002>`_"
msgstr ""

#: ../../CONTRIBUTING.rst:37
#: 2cb674d059a04dee9b746a7baaeecd17
msgid "The canaille server has some default users:"
msgstr ""

#: ../../CONTRIBUTING.rst:39
#: 2ac5d11cb40b4bffbc127225b286ccd9
msgid "A regular user which login and password are **user**;"
msgstr ""

#: ../../CONTRIBUTING.rst:40
#: 9646c01bc0e04c4792ff402b86595705
msgid "A moderator user which login and password are **moderator**;"
msgstr ""

#: ../../CONTRIBUTING.rst:41
#: 7b5a9e12d296447aaca3f29ea4be3f47
msgid "An admin user which admin and password are **admin**;"
msgstr ""

#: ../../CONTRIBUTING.rst:42
#: 3dbee7f7f26a43be90d535679c0a66e1
msgid "A new user which login is **james**. This user has no password yet, and his first attempt to log-in would result in sending a password initialization email (if a smtp server is configured)."
msgstr ""

#: ../../CONTRIBUTING.rst:47
#: 6a80df408d77487e873a79468c27a761
msgid "Backends"
msgstr ""

#: ../../CONTRIBUTING.rst:49
#: ed793c84780c4431b4a0f5174b77e863
msgid "Canaille comes with several backends:"
msgstr ""

#: ../../CONTRIBUTING.rst:51
#: 61e91cbb3e1b449d8c578142e0745e64
msgid "a lightweight test purpose `memory` backend"
msgstr ""

#: ../../CONTRIBUTING.rst:52
#: e167dd64b4f0429890295f6cd030e35f
msgid "a `sql` backend, based on sqlalchemy"
msgstr ""

#: ../../CONTRIBUTING.rst:53
#: 1a65f2eac34342be8835945125ede8a6
msgid "a production-ready `LDAP` backend"
msgstr ""

#: ../../CONTRIBUTING.rst:56
#: 409d19a554034d76ba2135fe2e1a740c
msgid "Docker environment"
msgstr ""

#: ../../CONTRIBUTING.rst:58
#: fdeee3e754e843eba8b76ad705e60587
msgid "If you want to develop with docker, your browser needs to be able to reach the `canaille` container. The docker-compose file exposes the right ports, but front requests are from outside the docker network: the `canaille` url that makes sense for docker, points nowhere from your browser. As exposed ports are on `localhost`, you need to tell your computer that `canaille` url means `localhost`."
msgstr ""

#: ../../CONTRIBUTING.rst:63
#: e30b205d85524074aeeb5a7d13c26965
msgid "To do that, you can add the following line to your `/etc/hosts`:"
msgstr ""

#: ../../CONTRIBUTING.rst:69
#: d7a9e2ab1a734dfd93cfadb72e9d9561
msgid "To launch containers, use:"
msgstr ""

#: ../../CONTRIBUTING.rst:84
#: 99a2e010018c4ab18f689adbd17949d2
msgid "Local environment"
msgstr ""

#: ../../CONTRIBUTING.rst:98
#: 4c63d4d9d6bc4be79415a7f0a921f3e8
msgid "If you want to run the demo locally with the LDAP backend, you need to have `OpenLDAP <https://www.openldap.org/>`_ installed on your system. It is generally shipped under the ``slapd`` or ``openldap`` package name."
msgstr ""

#: ../../CONTRIBUTING.rst:103
#: b6350782b583407f804ee9a125cc1f4c
msgid "On Debian or Ubuntu systems, the OpenLDAP `slapd` binary usage might be restricted by apparmor, and thus makes the tests and the demo fail. This can be mitigated by removing apparmor restrictions on `slapd`."
msgstr ""

#: ../../CONTRIBUTING.rst:113
#: ddfc0afccdf849bfacf69a734948945c
msgid "Populate the database"
msgstr ""

#: ../../CONTRIBUTING.rst:115
#: 0d809af195c54c1db4a049349ec0701b
msgid "The demo database comes populated with some random users and groups. If you need more, you can generate users and groups with the ``populate`` command:"
msgstr ""

#: ../../CONTRIBUTING.rst:126
#: 191e9f1df4d845ccab01dcb93de8d944
msgid "Adapt to use either the `ldap` or the `sql` configuration file. Note that this will not work with the memory backend."
msgstr ""

#: ../../CONTRIBUTING.rst:129
#: e15be9bc7ad44cf5852e7b819f3083f0
msgid "Unit tests"
msgstr ""

#: ../../CONTRIBUTING.rst:131
#: 6db086cc47f34d91bd3d33524b2a64a1
msgid "To run the tests, you just can run `uv run pytest` and/or `uv run tox` to test all the supported python environments. Everything must be green before patches get merged."
msgstr ""

#: ../../CONTRIBUTING.rst:134
#: 00e18c0ced044c949ee1a18d593da4d2
msgid "To test a specific backend you can pass ``--backend memory``, ``--backend sql`` or ``--backend ldap`` to pytest and tox."
msgstr ""

#: ../../CONTRIBUTING.rst:136
#: 41a97534fd4640bd9586f352647f57e6
msgid "The test coverage is 100%, patches won't be accepted if not entirely covered. You can check the test coverage with ``uv run pytest --cov --cov-report=html`` or ``uv run tox -e coverage -- --cov-report=html``. You can check the HTML coverage report in the newly created `htmlcov` directory."
msgstr ""

#: ../../CONTRIBUTING.rst:141
#: 8f210b646ca84be2b83b9509b35e3f39
msgid "Code style"
msgstr ""

#: ../../CONTRIBUTING.rst:143
#: e28cd3b679db45d4a4dee24039a28335
msgid "We use `ruff <https://docs.astral.sh/ruff/>`_ along with other tools to format our code. Please run ``uv run tox -e style`` on your patches before submitting them. In order to perform a style check and correction at each commit you can use our `pre-commit <https://pre-commit.com/>`_ configuration with ``uv run pre-commit install``."
msgstr ""

#: ../../CONTRIBUTING.rst:149
#: 1213a35a573741f487d16ab7f3017048
msgid "Front"
msgstr ""

#: ../../CONTRIBUTING.rst:151
#: ee73e266b48643f3b0d811fc3dba45de
msgid "The interface is built upon the `Fomantic UI <https://fomantic-ui.com/>`_ CSS framework. The dynamical parts of the interface use `htmx <https://htmx.org/>`_."
msgstr ""

#: ../../CONTRIBUTING.rst:154
#: f5998a63a3a8473ebdace062b9e4125f
msgid "Using Javascript in the interface is tolerated, but the whole website MUST be accessible for browsers without Javascript support, and without any feature loss."
msgstr ""

#: ../../CONTRIBUTING.rst:156
#: 156c5f0058a44a83a5ef7fc0276a0e79
msgid "Because of Fomantic UI we have a dependency to jQuery, however new contributions should not depend on jQuery at all. See the `related issue <https://gitlab.com/yaal/canaille/-/issues/130>`_."
msgstr ""

#: ../../CONTRIBUTING.rst:161
#: d2222852829b41e39d47b5ee4e2f35da
msgid "Documentation"
msgstr ""

#: ../../CONTRIBUTING.rst:163
#: 56ec493dc9c54b30ae012bce43edc8ac
msgid "The documentation is generated when the tests run:"
msgstr ""

#: ../../CONTRIBUTING.rst:169
#: c724f6040e8e41dfaa0bd61783b3f75e
msgid "You can also run sphinx by hand, that should be faster since it avoids the tox environment initialization:"
msgstr ""

#: ../../CONTRIBUTING.rst:175
#: c870557153b74096afeabcfb31d16a6d
msgid "The generated documentation is located at ``build/sphinx/html``."
msgstr ""

#: ../../CONTRIBUTING.rst:178
#: 69fc6bf00fe54884879b2d2a41877f66
msgid "Code translation"
msgstr ""

#: ../../canaille/translations/README.rst:1
#: cc50847556774dac9ce087a24bae715d
msgid "Translations are done with `Weblate <https://hosted.weblate.org/projects/canaille/canaille>`_."
msgstr ""

#: ../../canaille/translations/README.rst:3
#: 3d831a3a927d456f834248caaef471aa
msgid "The following commands are there as documentation, only the message extraction is needed for contributors. All the other steps are automatically done with Weblate."
msgstr ""

#: ../../canaille/translations/README.rst:8
#: ../locales/readme.rst:7
#: e5788bab9bea4b62896cea4130da2b22
#: 78bc50b888bb49aeadc7a04a79426545
msgid "Message extraction"
msgstr ""

#: ../../canaille/translations/README.rst:10
#: ../locales/readme.rst:9
#: cdf33fd9d8ba4540aa843a236a424596
#: 2c8e0e2054654b20a3b49db40f60601d
msgid "After you have edited translatable strings, you should extract the messages with:"
msgstr ""

#: ../../canaille/translations/README.rst:17
#: ../locales/readme.rst:16
#: 98d3fdec177b4519bd4d9efcd5cd827c
#: 1555b90dada547ce9112c0d5664c618f
msgid "Language addition"
msgstr ""

#: ../../canaille/translations/README.rst:19
#: ../locales/readme.rst:18
#: 32f431c9d9f9418292e69d27236af062
#: 762c9254a1b04b71aeb43923910b130e
msgid "You can add a new language manually with the following command, however this should not be needed as Weblate takes car of this:"
msgstr ""

#: ../../canaille/translations/README.rst:26
#: 797cc0492f974a1e806df493b216c5f8
msgid "Catalog update"
msgstr ""

#: ../../canaille/translations/README.rst:28
#: a40f65b9a07e48d88f88e08096d31299
msgid "You can update the catalogs with the following command, however this should not be needed as Weblate automatically update language catalogs when it detects new strings or when someone translate some existing strings. Weblate pushes happen every 24h."
msgstr ""

#: ../../canaille/translations/README.rst:36
#: c3f0a5e6753c4c21ab3997c39d57800f
msgid "Catalog compilation"
msgstr ""

#: ../../canaille/translations/README.rst:38
#: 614a641d465649e7a779a9d4ef49cbd9
msgid "You can compile the catalogs with the following command, however this should not be needed as catalogs are automatically compiled before running the unit tests, before launching the demo and before compiling the Canaille python package:"
msgstr ""

#: ../../CONTRIBUTING.rst:184
#: add6d5220923488a82e49359ce7a0d55
msgid "Documentation translation"
msgstr ""

#: ../locales/readme.rst:1
#: a2cfb06dfde7462fb3382c20183342a0
msgid "Documentation translation Translations are done with `Weblate <https://hosted.weblate.org/projects/canaille/canaille>`_."
msgstr ""

#: ../locales/readme.rst:4
#: 113485680b744151a4e88e903b33f63c
msgid "The following commands are there as documentation, only the message extraction and the language addition is needed for contributors."
msgstr ""

#: ../locales/readme.rst:25
#: e4baf07e2a99407a8a96e0574a012091
msgid "Build the documentation in another language"
msgstr ""

#: ../../CONTRIBUTING.rst:189
#: 515603cf888740aa9a3dd3dd230e3352
msgid "Publish a new release"
msgstr ""

#: ../../CONTRIBUTING.rst:191
#: e657f8e780dd4674a90bf0dde7decbe1
msgid "Check that dependencies are up to date with ``uv sync --all-extras --upgrade`` and update dependencies accordingly in separated commits;"
msgstr ""

#: ../../CONTRIBUTING.rst:192
#: 391ef00613ed4d8ca5538c617ed4e9ac
msgid "Check that tests are still green for every supported python version, and that coverage is still at 100%, by running ``uv run tox``;"
msgstr ""

#: ../../CONTRIBUTING.rst:193
#: 57694c4f22574e50bff25cab27182f2d
msgid "Check that the demo environments are still working, both the local and the Docker one;"
msgstr ""

#: ../../CONTRIBUTING.rst:194
#: 3c03facaea6646948faf4531c2474b8f
msgid "Check that the :ref:`development/changelog:Release notes` section is correctly filled up;"
msgstr ""

#: ../../CONTRIBUTING.rst:195
#: ab7667b315734c5b9a4222006d86b173
msgid "Increase the version number in ``pyproject.toml``;"
msgstr ""

#: ../../CONTRIBUTING.rst:196
#: d65334bb5a78403eab57f3b17995ca3f
msgid "Commit with ``git commit``;"
msgstr ""

#: ../../CONTRIBUTING.rst:197
#: dee8dcd9aa344228b9f5cd8b9142a630
msgid "Build with ``uv build``;"
msgstr ""

#: ../../CONTRIBUTING.rst:198
#: 7782721ef59e4196aca0b8e3b4eee781
msgid "Publish on test PyPI with ``uv publish --publish-url https://test.pypi.org/legacy/``;"
msgstr ""

#: ../../CONTRIBUTING.rst:199
#: 1c23cb30798d4f06a418c61e6c7a998f
msgid "Install the test package somewhere with ``pip install --extra-index-url https://test.pypi.org/simple --upgrade canaille``. Check that everything looks fine;"
msgstr ""

#: ../../CONTRIBUTING.rst:200
#: 14eccb7318524fb2af7e0d75bdb59e19
msgid "Publish on production PyPI ``uv publish``;"
msgstr ""

#: ../../CONTRIBUTING.rst:201
#: 7776d49a05bc4399a09fa9ff7a08fc65
msgid "Tag the commit with ``git tag XX.YY.ZZ``;"
msgstr ""

#: ../../CONTRIBUTING.rst:202
#: 69b763c261ce43478f815696e7762162
msgid "Push the release commit and the new tag on the repository with ``git push --tags``."
msgstr ""
